//Design
module dec(A, en, f);
	input [2:0] A;
    input en;
    output [7:0] f;
    wire [7:0] f;
    assign f[0] = en ? ((~A[0])&(~A[1])&(~A[2])) : 0;
    assign f[1] = en ? ((~A[0])&(~A[1])&(A[2])) : 0;
    assign f[2] = en ? ((~A[0])&(A[1])&(~A[2])) : 0;
    assign f[3] = en ? ((~A[0])&(A[1])&(A[2])) : 0;
    assign f[4] = en ? ((A[0])&(~A[1])&(~A[2])) : 0;
    assign f[5] = en ? ((A[0])&(~A[1])&(A[2])) : 0;
    assign f[6] = en ? ((A[0])&(A[1])&(~A[2])) : 0;
    assign f[7] = en ? ((A[0])&(A[1])&(A[2])) : 0;
endmodule

//Testbench
module test;
	reg [2:0] A;
    reg en;
    wire [7:0] f;
    dec dut1(.A(A), .en(en), .f(f));
    initial begin
    $dumpfile("dump.vcd");
    $dumpvars(1);
    A = 3'b000;
    en = 0;
    #5
    A = 3'b000;
    en = 1;
    #5
    A = 3'b001;
    en = 1;
    #5
    A = 3'b010;
    en = 1;
    #5
    A = 3'b011;
    en = 1;
    #5
    A = 3'b100;
    en = 1;
    #5
    A = 3'b101;
    en = 1;
    #5
    A = 3'b110;
    en = 1;
    #5
    A = 3'b111;
    en = 1;
  end
endmodule
//Theory
A 3 x 8 decoder is a digital logic circuit that takes a 3-bit binary input and activates one of the eight output lines based on the binary value of the input. 
It is commonly used in applications where decoding and demultiplexing of data signals are required. Here's a theory on how a 3 x 8 decoder works:

1. Inputs: A 3 x 8 decoder has three input lines, denoted as A[2], A[1], and A[0]. These input lines carry a binary value (0 or 1) or a digital signal.

2. Output Lines: The decoder has eight output lines, denoted as Y[7], Y[6], Y[5], Y[4], Y[3], Y[2], Y[1], and Y[0]. Each output line corresponds to a specific 
binary combination of the input lines.

3. Truth Table: The behavior of the 3 x 8 decoder can be defined using a truth table that specifies the output for each possible combination of input lines. The
truth table has eight rows (2^3 input combinations) and eight columns (one for each output line).
A[2] | A[1] | A[0] | Y[7] | Y[6] | Y[5] | Y[4] | Y[3] | Y[2] | Y[1] | Y[0]
0 | 0 | 0 | - | - | - | - | - | - | - | -
... (all possible combinations)

4. Logic Circuit: The 3 x 8 decoder can be implemented using logic gates such as AND gates, OR gates, and NOT gates. The specific implementation depends on the
desired behavior of the decoder.
(i) Basic Implementation: The basic implementation of a 3 x 8 decoder involves using a combination of logic gates to activate the appropriate output line based on 
the input combination. The logic gates perform the necessary decoding to enable the selected output line and disable the rest.

5. Output: The output of the 3 x 8 decoder is the selected output line corresponding to the binary combination of the input lines. Only one output line is 
activated at a time, based on the input combination.

6. Applications: The 3 x 8 decoder is commonly used in various applications that require decoding and demultiplexing of data signals. It is used to decode address
lines in memory systems, select specific devices or circuits based on control inputs, and distribute signals to multiple output lines based on input conditions.

By decoding the input lines and activating the appropriate output line, a 3 x 8 decoder provides a means to demultiplex and distribute data signals based on the
binary value of the input. It is a fundamental component in digital systems and plays a crucial role in various aspects of digital design and data manipulation.

//Design
module nand2(
  input A,
  input B,
  output C
);
  assign C = ~(A & B);
endmodule

//Testbench
module nand2_tb;
  reg A,B;
  wire C;
  nand2 uut (.A(A), .B(B), .C(C));
  initial
    begin
      A = 0; B = 0; #100;
      A = 0; B = 1; #100;
      A = 1; B = 0; #100;
      A = 1; B = 1; #100;
    end
initial 
  begin
    $dumpfile ("dump.vcd");
    $dumpvars (0, nand2_tb);
  end
endmodule
      
      
//Theory
A NAND gate (“not AND gate”) is a logic gate that produces a low output (0) only if all its inputs are true, and high output (1) otherwise. Hence the NAND gate is 
the inverse of an AND gate, and its circuit is produced by connecting an AND gate to a NOT gate. Just like an AND gate, a NAND gate may have any number of input 
probes but only one output probe.

The NAND gate performs the logical NAND operation. NAND gates are known as universal gates (along with NOR gates), which means they are a type of logic gate which
can implement any Boolean function without the need to use any other gate type.
